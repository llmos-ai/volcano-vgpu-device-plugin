# Copyright 2024 NVIDIA CORPORATION
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run this workflow on pull requests or merge to main/dev branches
name: Build Dev Image

on:
  push:
    branches:
    - main
    - release-*
  pull_request:
    branches:
      - main
      - release-*

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ${{ vars.REGISTRY || 'ghcr.io/llmos-ai' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - uses: actions/setup-go@v5
      with:
        go-version: 1.24
    - name: Checkout submodule
      uses: Mushus/checkout-submodule@v1.0.1
      with:
        submodulePath: libvgpu
    - run: go version
    - name: Get branch name
      uses: nelonoel/branch-name@v1.0.1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Generating image tag
      id: runtime-tag
      run: |
        echo tag="$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Build images
      if: github.event_name == 'pull_request'
      run: BUILD_PLATFORMS="linux/amd64,linux/arm64" VERSION="${{ steps.runtime-tag.outputs.tag }}" make build
    - name: Push images
      if: github.event_name == 'push'
      run: BUILD_PLATFORMS="linux/amd64,linux/arm64" VERSION="${BRANCH_NAME}-head" make push